!function(e){var t={};function a(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)a.d(r,s,function(t){return e[t]}.bind(null,s));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=76)}({12:function(e){e.exports=JSON.parse('{"url":{"name":"measurebar"},"constructor":"M.plugin.Measurebar","files":{"ol":{"scripts":["measurebar-3.1.2.ol.min.js"],"styles":["measurebar-3.1.2.min.css"]}},"metadata":{"uuid_plugin":"","uuid_version_plugin":"","version_ficha_metadatos":"","name":"Measurebar","description":"Tool to measure distances and areas.","text":"","version":"3.1.2","date":"20/10/2019","author":"Junta de Andalucía","org":"Junta de Andalucía","tags":"mapea,plugin","icon":"./facade/assets/icons/icons.svg","buttons":[{"title":"","description":"","querySelector":""},{"title":"","description":"","querySelector":""}],"dependencies":{"modules":["",""],"plugins":[{"uuid":"","name":""}],"services":[{"name":"","description":""}]},"compatibility":["4","5","6"]}}')},32:function(e,t){e.exports='<div class="m-measure-tooltip pointer"></div>'},33:function(e,t){e.exports='<div class="m-measure-tooltip measure">Area: {{area}}</div>'},34:function(e,t){e.exports='<div class="m-control m-measurearea-container">\n   <button id="m-measure-button" class="g-cartografia-medir-area" title="Medir área"></button>\n</div>'},35:function(e,t){e.exports='<div class="m-control m-measurelength-container">\n   <button id="m-measure-button" class="g-cartografia-medir-linea" title="Medir distancias"></button>\n</div>'},36:function(e,t){e.exports='<div class="m-control m-measureclear-container">\n   <button id="m-measure-button" class="g-cartografia-papelera" title="Borrar medidas"></button>\n</div>'},62:function(e,t,a){},76:function(e,t,a){"use strict";a.r(t);class r extends M.Control{constructor(e,t,a){super(e,a),this.template_=t}createView(e){return M.template.compileSync(this.template_,{jsonp:!0})}getActivationButton(e){return e.querySelector("button#m-measure-button")}equals(e){let t=!1;return e instanceof r&&(t=this.name===e.name),t}destroy(){this.getImpl().destroy(),this.template_=null,this.impl=null}}r.NAME="measurebar",r.POINTER_TOOLTIP_TEMPLATE="measure_pointer_tooltip.html",r.MEASURE_TOOLTIP_TEMPLATE="measure_tooltip.html",r.HELP_MESSAGE="Click para empezar a dibujar";var s=a(32),i=a.n(s),n=a(33),o=a.n(n);class l extends M.impl.Control{constructor(e){super(),this.type_=e,this.layer_=this.createLayer_(),this.draw_=this.createIteractionDraw_(),this.helpTooltip_=null,this.measureTooltip_=null,this.facadeMap_=null,this.currentFeature_=null,this.tooltipCoord_=null,this.overlays_=[]}addTo(e,t){this.facadeMap_=e,e.getMapImpl().addLayer(this.layer_),super.addTo(e,t),this.createHelpTooltip_(),this.createMeasureTooltip_()}activate(){this.createHelpTooltip_(),this.facadeMap_.getMapImpl().on("pointermove",this.pointerMoveHandler_.bind(this)),this.facadeMap_.getMapImpl().addInteraction(this.draw_),this.active=!0,this.createMeasureTooltip_()}deactivate(){this.facadeMap_.getMapImpl().un("pointermove",this.pointerMoveHandler_.bind(this)),this.facadeMap_.getMapImpl().removeInteraction(this.draw_),this.clear(),M.utils.isNullOrEmpty(this.helpTooltip_)||this.facadeMap_.getMapImpl().removeOverlay(this.helpTooltip_),M.utils.isNullOrEmpty(this.measureTooltip_)||this.facadeMap_.getMapImpl().removeOverlay(this.measureTooltip_),this.active=!1}createLayer_(){return new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(51, 124, 235, 0.2)"}),stroke:new ol.style.Stroke({color:"#337ceb",width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:"#337ceb"})})}),zIndex:M.impl.Map.Z_INDEX[M.layer.type.WFS]+99})}createIteractionDraw_(){const e=new ol.interaction.Draw({source:this.layer_.getSource(),type:this.type_,style:new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.5)"}),stroke:new ol.style.Stroke({color:"#b54d01",lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:"#b54d01"}),fill:new ol.style.Fill({color:"rgba(255, 255, 255, 0.5)"})})})});return e.on("drawstart",this.onDrawStart_.bind(this)),e.on("drawend",this.onDrawEnd_.bind(this)),e}createHelpTooltip_(){const e=M.template.compileSync(i.a,{jsonp:!0});this.helpTooltip_=new ol.Overlay({element:e,offset:[15,0],positioning:"center-left"}),this.facadeMap_.getMapImpl().addOverlay(this.helpTooltip_)}createMeasureTooltip_(){const e=M.template.compileSync(o.a,{jsonp:!0});M.utils.isNullOrEmpty(this.measureTooltip_)||this.overlays_.push(this.measureTooltip_),this.measureTooltip_=new ol.Overlay({element:e,offset:[0,-15],positioning:"bottom-center"}),this.facadeMap_.getMapImpl().addOverlay(this.measureTooltip_)}onDrawStart_(e){this.currentFeature_=e.feature,this.tooltipCoord_=e.coordinate,this.currentFeature_.getGeometry().on("change",this.onGeometryChange_.bind(this))}onDrawEnd_(e){this.currentFeature_.getGeometry().un("change",this.onGeometryChange_),this.currentFeature_=null,this.measureTooltip_.getElement().classList.add("static"),this.measureTooltip_.setOffset([0,-7]),this.createMeasureTooltip_()}pointerMoveHandler_(e){if(e.dragging)return;let t=this.helpMsg_;this.currentFeature_&&(t=this.helpMsgContinue_),M.utils.isNullOrEmpty(this.helpTooltip_)||(this.helpTooltip_.getElement().innerHTML=t,this.helpTooltip_.setPosition(e.coordinate))}onGeometryChange_(e){const t=e.target,a=this.formatGeometry(t),r=this.getTooltipCoordinate(t);M.utils.isNullOrEmpty(this.measureTooltip_)||(this.measureTooltip_.getElement().innerHTML=a,this.measureTooltip_.setPosition(r))}clear(){M.utils.isNullOrEmpty(this.layer_)||this.layer_.getSource().clear(),this.overlays_.forEach(e=>{this.facadeMap_.getMapImpl().removeOverlay(e)},this),this.overlays_.length=0}destroy(){this.deactivate(),this.element.remove(),this.facadeMap_.removeControls(this),this.facadeMap_=null,this.overlays_.length=0}}class u extends l{constructor(e,t){super("Polygon"),this.helpMsg_=r.HELP_MESSAGE,this.helpMsgContinue_=d,this.distanciaArea_=e,this.unidadMedida_=t}formatGeometry(e){let t=null;const a=this.facadeMap_.getProjection();let r;return t=ol.sphere.getArea(e,{projection:a.code}),r=t>1e4?`${Math.round(t/1e6*this.distanciaArea_*100)/100} ${this.unidadMedida_}`:Math.round(100*t)/100+" m<sup>2</sup>",r}getTooltipCoordinate(e){return e.getInteriorPoint().getCoordinates()}activate(){const e=this.facadeMap_.getControls().filter(e=>e instanceof f)[0];e&&e.deactivate(),super.activate()}}var c=a(34),p=a.n(c);class h extends r{constructor(e,t){super(new u(e,t),p.a,h.NAME),M.utils.isUndefined(u)&&M.Exception("La implementación usada no puede crear controles MeasureArea")}equals(e){let t=!1;return e instanceof h&&(t=this.name===e.name),t}}h.NAME="measurearea",h.TEMPLATE="measurearea.html";const d="Click para continuar dibujando el área";class m extends l{constructor(){super("LineString"),this.helpMsg_=r.HELP_MESSAGE,this.helpMsgContinue_=y}formatGeometry(e){let t=null;const a=this.facadeMap_.getProjection().code,r=this.facadeMap_.getProjection().units;if("EPSG:3857"===a)t=Math.round(100*ol.sphere.getLength(e))/100;else if("d"===r){const r=e.getCoordinates();for(let e=0,s=r.length-1;e<s;e+=1)t+=ol.sphere.getDistance(ol.proj.transform(r[e],a,"EPSG:4326"),ol.proj.transform(r[e+1],a,"EPSG:4326"))}else t=Math.round(100*e.getLength())/100;let s;return s=t>100?Math.round(t/1e3*100)/100+" km":Math.round(100*t)/100+" m",s}getTooltipCoordinate(e){return e.getLastCoordinate()}activate(){const e=this.facadeMap_.getControls().filter(e=>e instanceof h)[0];e&&e.deactivate(),super.activate()}}var _=a(35),g=a.n(_);class f extends r{constructor(){super(new m,g.a,f.NAME),M.utils.isUndefined(m)&&M.Exception("La implementación usada no puede crear controles MeasureLength")}equals(e){let t=!1;return e instanceof f&&(t=this.name===e.name),t}}f.NAME="measurelength",f.TEMPLATE="measurelength.html";const y="Click para continuar dibujando la línea";class v extends M.impl.Control{constructor(e,t){super(),this.measureLengthControl_=e,this.facadeMap_=null,this.measureAreaControl_=t}addTo(e,t){this.facadeMap_=e;t.getElementsByTagName("button")["m-measure-button"].addEventListener("click",this.onClick.bind(this)),this.element=t,super.addTo(e,t)}onClick(){this.measureLengthControl_.clear(),this.measureAreaControl_.clear()}destroy(){this.element.remove(),this.facadeMap_.removeControls(this),this.facadeMap_=null}}var T=a(36),E=a.n(T);class b extends M.Control{constructor(e,t){super(new v(e.getImpl(),t.getImpl()),b.NAME),M.utils.isUndefined(v)&&M.Exception("La implementación usada no puede crear controles MeasureClear")}createView(e){return M.template.compileSync(E.a,{jsonp:!0})}equals(e){let t=!1;return e instanceof b&&(t=this.name===e.name),t}destroy(){this.getImpl().destroy(),this.impl=null}}b.NAME="measurebar",b.TEMPLATE="measureclear.html";a(62);var A=a(12);class w extends M.Plugin{constructor(e){const t=e||{};super(),this.map_=null,this.measureLength_=null,this.measureArea_=null,this.name=w.NAME,this.measureClear_=null,this.metadata_=A.metadata,this.longitud_=t.longitud||100,this.metadata_=A.metadata,this.distanciaArea_=t.distanciaArea||1,this.metadata_=A.metadata,this.unidadMedida_=t.unidadMedida||"km<sup>2</sup>"}addTo(e){this.map_=e,this.measureLength_=new f(this.longitud_),this.measureArea_=new h(this.distanciaArea_,this.unidadMedida_),this.measureClear_=new b(this.measureLength_,this.measureArea_),M.utils.isNullOrEmpty(this.map_.panel.TOOLS)&&(this.map_.panel.TOOLS=new M.ui.Panel("tools",{collapsible:!0,className:"m-tools",collapsedButtonClass:"g-cartografia-herramienta",position:M.ui.position.TL,tooltip:"Panel de herramientas"})),this.controls_=[this.measureLength_,this.measureArea_,this.measureClear_],this.measureLength_.on(M.evt.ADDED_TO_MAP,()=>{this.measureArea_.on(M.evt.ADDED_TO_MAP,()=>{this.measureClear_.on(M.evt.ADDED_TO_MAP,()=>{this.fire(M.evt.ADDED_TO_MAP)})})}),this.map_.panel.TOOLS.addControls(this.controls_),this.panel_=this.map_.panel.TOOLS,this.map_.addPanels(this.panel_)}destroy(){this.panel_.removeControls([this.measureLength_,this.measureArea_,this.measureClear_]),this.map_=null,this.measureLength_=null,this.measureArea_=null,this.measureClear_=null,this.name=null}getControls(){const e=[];return e.push(this.measureArea_,this.measureClear_,this.measureLength_),e}equals(e){return e instanceof w}getAPIRest(){return"measurebar"}getMetadata(){return this.metadata_}}w.NAME="measurebar",null==window.M.plugin&&(window.M.plugin={}),window.M.plugin.Measurebar=w}});